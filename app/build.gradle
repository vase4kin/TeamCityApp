/*
 * Copyright 2019 Andrey Tolpeev
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'
apply from: '../scripts/jacoco.gradle'
apply from: '../scripts/pmd.gradle'
apply from: '../scripts/findbugs.gradle'

android {
    defaultConfig {
        applicationId Config.applicationId
        versionCode Config.versionCode
        versionName Config.versionName
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            minifyEnabled true
        }
        debug {
            testCoverageEnabled true
            applicationIdSuffix = ".debug"
        }
        showcase.initWith(buildTypes.release)
        showcase {
            applicationIdSuffix = ".showcase"
        }
    }

    flavorDimensions "default"

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true)
        }
        if (variant.buildType.name.equals('showcase')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true)
        }
    }

    dexOptions {
        jumboMode true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':libraries:utils')
    implementation project(':libraries:api')

    implementation project(':features:test-details:api-models')

    // Android support libraries
    implementation Deps.androidx_appcompat
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    // Api third party libraries
    implementation Deps.api_okhttp
    implementation Deps.api_okhttpLogginInterceptor
    implementation Deps.api_gson
    implementation Deps.api_retrofit
    implementation Deps.api_retrofitConverterGson
    implementation Deps.api_retrofitAdapterRxJava2
    // Dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    // Views
    implementation 'tr.xip.errorview:library:3.0.0'
    // View injection
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    kapt 'com.jakewharton:butterknife-compiler:10.1.0'
    // Event bus
    implementation 'org.greenrobot:eventbus:3.0.0'
    // Others
    implementation 'joda-time:joda-time:2.8.1'
    implementation 'com.vinaysshenoy:mugen:1.0.2'
    implementation('com.mikepenz:aboutlibraries:6.1.1@aar') {
        transitive = true
    }
    implementation 'io.supercharge:shimmerlayout:2.1.0'
    implementation 'com.github.daniel-stoneuk:material-about-library:2.2.5'
    // Onboarding
    implementation 'uk.co.samuelwall:material-tap-target-prompt:2.14.0'
    // Dagger
    implementation 'com.google.dagger:dagger:2.21'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.21'
    kapt 'com.google.dagger:dagger-compiler:2.21'
    implementation 'com.google.dagger:dagger-android-support:2.21'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.21'
    kapt 'com.google.dagger:dagger-android-processor:2.21'
    // Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    // Rx cache
    implementation "com.github.VictorAlbertos.RxCache:runtime:1.8.3-2.x"
    implementation 'com.github.VictorAlbertos.Jolyglot:gson:0.0.4'
    // Encryption
    implementation 'com.facebook.conceal:conceal:1.1.3@aar'
    // Firebase
    implementation 'com.google.firebase:firebase-core:17.2.0'
    implementation 'com.google.firebase:firebase-config:19.0.0'
    implementation 'com.google.firebase:firebase-perf:19.0.0'
    // Bottom nav libries
    implementation 'com.ncapdevi:frag-nav:3.3.0'
    implementation 'com.aurelhubert:ahbottomnavigation:2.3.4'
    // Unit tests
    testImplementation Deps.test_junit
    testImplementation Deps.test_mockito
    testImplementation 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testImplementation Deps.test_powerMockJunit4
    testImplementation Deps.test_powerMockJunitRule
    testImplementation Deps.test_powerMockApiMockito
    testImplementation Deps.test_powerMockClassLoadingXstream
    // Ui tests
    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    // Espresso dependenciesd
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    // Mockito
    androidTestImplementation Deps.test_mockito
    // Dex maker
    androidTestImplementation Deps.dexmaker
    androidTestImplementation Deps.dexmakerDx
    androidTestImplementation Deps.dexmakerMockito
    // Dagger mock
    androidTestImplementation 'com.github.fabioCollini:DaggerMock:0.8.5'
    // Condition watcher
    androidTestImplementation 'com.azimolabs.conditionwatcher:conditionwatcher:0.2'
    // Resolve conflits between apks
    androidTestImplementation 'com.google.android.material:material:1.0.0'
    androidTestImplementation 'androidx.recyclerview:recyclerview:1.0.0'
    // Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
}

apply plugin: 'com.google.gms.google-services'

/*
 * Copyright 2019 Andrey Tolpeev
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'org.jmailen.kotlinter'
apply from: 'jacoco.gradle'
apply from: 'spoon.gradle'
apply from: 'pmd.gradle'
apply from: 'findbugs.gradle'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.github.vase4kin.teamcityapp"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            minifyEnabled true
        }
        debug {
            testCoverageEnabled true
            applicationIdSuffix = ".debug"
        }
        showcase.initWith(buildTypes.release)
        showcase {
            applicationIdSuffix = ".showcase"
        }
    }

    flavorDimensions "default"

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true)
        }
        if (variant.buildType.name.equals('showcase')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true)
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        //https://code.google.com/p/android/issues/detail?id=195331
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    testOptions {
        unitTests {
            all {
                jvmArgs '-noverify'
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        xmlReport false
        abortOnError true
        htmlOutput file("build/reports/lint-report/lint-report.html")
    }

    dexOptions {
        jumboMode true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinter {
        ignoreFailures = false
        indentSize = 4
        continuationIndentSize = 4
        reporters = ["html"]
        experimentalRules = false
        disabledRules = ["no-wildcard-imports", "import-ordering"]
        fileBatchSize = 30
    }
}

buildscript {
    repositories {
        mavenCentral() // or jCenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.1.1'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories{

    mavenCentral()

    flatDir{
        dirs 'libs'
    }

    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Android support libraries
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.browser:browser:1.0.0'
    // Api third party libraries
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    // Drawer
    implementation('com.mikepenz:materialdrawer:6.1.2') {
        transitive = true
    }
    // Icons
    implementation 'com.joanzapata.iconify:android-iconify-material:2.2.2'
    implementation 'com.joanzapata.iconify:android-iconify-fontawesome:2.2.2'
    implementation 'com.joanzapata.iconify:android-iconify-material-community:2.2.2'
    // Dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    // Views
    implementation 'tr.xip.errorview:library:3.0.0'
    // View injection
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    kapt 'com.jakewharton:butterknife-compiler:10.1.0'
    // Event bus
    implementation 'org.greenrobot:eventbus:3.0.0'
    // Others
    implementation 'joda-time:joda-time:2.8.1'
    implementation 'com.vinaysshenoy:mugen:1.0.2'
    implementation('com.mikepenz:aboutlibraries:6.1.1@aar') {
        transitive = true
    }
    implementation 'io.supercharge:shimmerlayout:2.1.0'
    implementation 'com.github.daniel-stoneuk:material-about-library:2.2.5'
    // Onboarding
    implementation 'uk.co.samuelwall:material-tap-target-prompt:2.14.0'
    // Dagger
    implementation 'com.google.dagger:dagger:2.21'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.21'
    kapt 'com.google.dagger:dagger-compiler:2.21'
    implementation 'com.google.dagger:dagger-android-support:2.21'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.21'
    kapt 'com.google.dagger:dagger-android-processor:2.21'
    // Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    // Rx cache
    implementation "com.github.VictorAlbertos.RxCache:runtime:1.8.3-2.x"
    implementation 'com.github.VictorAlbertos.Jolyglot:gson:0.0.4'
    // Encryption
    implementation 'com.facebook.conceal:conceal:1.1.3@aar'
    // Firebase
    implementation 'com.google.firebase:firebase-core:17.2.0'
    implementation 'com.google.firebase:firebase-config:19.0.0'
    implementation 'com.google.firebase:firebase-perf:19.0.0'
    // Bottom nav libries
    implementation 'com.ncapdevi:frag-nav:3.3.0'
    implementation 'com.aurelhubert:ahbottomnavigation:2.3.4'
    // Unit tests
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoCoreVersion"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$rootProject.powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito:$rootProject.powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$rootProject.powerMockVersion"
    // Ui tests
    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    // Espresso dependenciesd
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    // Mockito
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoCoreVersion"
    // Dex maker
    androidTestImplementation "com.crittercism.dexmaker:dexmaker:$rootProject.dexMakerVersion"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker-dx:$rootProject.dexMakerVersion"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker-mockito:$rootProject.dexMakerVersion"
    // Dagger mock
    androidTestImplementation 'com.github.fabioCollini:DaggerMock:0.8.5'
    // Condition watcher
    androidTestImplementation 'com.azimolabs.conditionwatcher:conditionwatcher:0.2'
    // Resolve conflits between apks
    androidTestImplementation 'com.google.android.material:material:1.0.0'
    androidTestImplementation 'androidx.recyclerview:recyclerview:1.0.0'
    // Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

apply plugin: 'com.google.gms.google-services'
